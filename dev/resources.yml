resources:
  Resources:
    MainTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
          - AttributeName: GSI1PK
            AttributeType: S
          - AttributeName: GSI1SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: GSI1
            KeySchema:
              - AttributeName: GSI1PK
                KeyType: HASH
              - AttributeName: GSI1SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        TableName: ${self:custom.mainTableName}
    HeadersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: GSI1PK
            AttributeType: S
          - AttributeName: GSI1SK
            AttributeType: S
          - AttributeName: GSI2PK
            AttributeType: S
          - AttributeName: GSI2SK
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: GSI1
            KeySchema:
              - AttributeName: GSI1PK
                KeyType: HASH
              - AttributeName: GSI1SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: GSI2
            KeySchema:
              - AttributeName: GSI2PK
                KeyType: HASH
              - AttributeName: GSI2SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        TableName: ${self:custom.headersTableName}
    HeadersTableVertex:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: GSI1PK
            AttributeType: S
          - AttributeName: GSI1SK
            AttributeType: S
          - AttributeName: GSI2PK
            AttributeType: S
          - AttributeName: GSI2SK
            AttributeType: S
          - AttributeName: GSI3PK
            AttributeType: S
          - AttributeName: GSI3SK
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: GSI1
            KeySchema:
              - AttributeName: GSI1PK
                KeyType: HASH
              - AttributeName: GSI1SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: GSI2
            KeySchema:
              - AttributeName: GSI2PK
                KeyType: HASH
              - AttributeName: GSI2SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: GSI3
            KeySchema:
              - AttributeName: GSI3PK
                KeyType: HASH
              - AttributeName: GSI3SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        TableName: ${self:custom.headersTableNameVertex}
    BillsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: GSI1PK
            AttributeType: S
          - AttributeName: GSI1SK
            AttributeType: S
          - AttributeName: GSI2PK
            AttributeType: S
          - AttributeName: GSI2SK
            AttributeType: S
          - AttributeName: creationDate
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: GSI1
            KeySchema:
              - AttributeName: GSI1PK
                KeyType: HASH
              - AttributeName: GSI1SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: GSI2
            KeySchema:
              - AttributeName: GSI2PK
                KeyType: HASH
              - AttributeName: GSI2SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: GSI3
            KeySchema:
              - AttributeName: GSI1SK
                KeyType: HASH
              - AttributeName: creationDate
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        TableName: ${self:custom.billsTableName}
    BillsTableVertex:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: GSI1PK
            AttributeType: S
          - AttributeName: GSI1SK
            AttributeType: S
          - AttributeName: GSI2PK
            AttributeType: S
          - AttributeName: GSI2SK
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: GSI1
            KeySchema:
              - AttributeName: GSI1PK
                KeyType: HASH
              - AttributeName: GSI1SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: GSI2
            KeySchema:
              - AttributeName: GSI2PK
                KeyType: HASH
              - AttributeName: GSI2SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        TableName: ${self:custom.billsTableVertexName}
    CommonTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.commonTableName}
    ConfigTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.configTableName}
    ReferencesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
          - AttributeName: GSI1PK
            AttributeType: S
          - AttributeName: GSI1SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: GSI1
            KeySchema:
              - AttributeName: GSI1PK
                KeyType: HASH
              - AttributeName: GSI1SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        TableName: ${self:custom.referencesTableName}
    ItemsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: GSI1PK
            AttributeType: S
          - AttributeName: GSI1SK
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: GSI1
            KeySchema:
              - AttributeName: GSI1PK
                KeyType: HASH
              - AttributeName: GSI1SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        TableName: ${self:custom.itemsTableName}
    NotificationsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: GSI1PK
            AttributeType: S
          - AttributeName: GSI1SK
            AttributeType: N
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: GSI1
            KeySchema:
              - AttributeName: GSI1PK
                KeyType: HASH
              - AttributeName: GSI1SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        TableName: ${self:custom.notificationsTableName}
    S3ProductsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.s3Products}
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
        OwnershipControls:
          Rules:
            - ObjectOwnership: ObjectWriter
    S3BillsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.s3Bills}
    BillsTableEventBus:
      Type: AWS::Events::EventBus
      Properties:
        Name: ${self:custom.billsTableEventBus}
    BillsTextractRule:
      Type: AWS::Events::Rule
      Properties:
        Name: ${self:custom.billsTextractRule}
        EventBusName:
          Fn::GetAtt:
            - BillsTableEventBus
            - Arn
        EventPattern:
          source:
            - "triggerBillsTable"
          detail:
            response:
              statusCode:
                - 200
              result:
                bill:
                  data:
                    status:
                      data:
                        - "CREATED"
                      change:
                        - "new"
                        - "modified"
        Targets:
          - Arn:
              Fn::GetAtt:
                - SqsBillsTextract
                - Arn
            Id: ${self:custom.sqsBillsTextract}
    BillAnalysisRule:
      Type: AWS::Events::Rule
      Properties:
        Name: ${self:custom.billAnalysisRule}
        EventBusName:
          Fn::GetAtt:
            - BillsTableEventBus
            - Arn
        EventPattern:
          source:
            - "triggerBillsTable"
          detail:
            response:
              result:
                bill:
                  data:
                    status:
                      data:
                        - TEXTRACT_COMPLETED
                      change:
                        - new
                        - modified
        Targets:
          - Arn:
              Fn::GetAtt:
                - SqsBillAnalysis
                - Arn
            Id: ${self:custom.sqsBillAnalysis}
    BillTextractPreProcessingRule:
      Type: AWS::Events::Rule
      Properties:
        Name: ${self:custom.billTextractPreProcessingRule}
        EventBusName:
          Fn::GetAtt:
            - BillsTableEventBus
            - Arn
        EventPattern:
          source:
            - "triggerBillsTable"
          detail:
            response:
              result:
                bill:
                  data:
                    status:
                      data:
                        - "TEXTRACT_DATA_PREPROCESSED"
                      change:
                        - "new"
                        - "modified"
        Targets:
          - Arn:
              Fn::GetAtt:
                - SqsBillTextractPreProcessing
                - Arn
            Id: ${self:custom.sqsBillTextractPreProcessing}
    ProductIdentifyRule:
      Type: AWS::Events::Rule
      Properties:
        Name: ${self:custom.productIdentifyRule}
        EventBusName:
          Fn::GetAtt:
            - BillsTableEventBus
            - Arn
        EventPattern:
          source:
            - "triggerBillsTable"
          detail:
            response:
              statusCode:
                - 200
              result:
                bill:
                  data:
                    status:
                      data:
                        - "TEXTRACT_RESPONSE_ANALYZED"
                      change:
                        - "new"
                        - "modified"
        Targets:
          - Arn:
              Fn::GetAtt:
                - SqsProductIdentify
                - Arn
            Id: ${self:custom.sqsProductIdentify}
    PromotionsIdentifyRule:
      Type: AWS::Events::Rule
      Properties:
        Name: ${self:custom.promotionsIdentifyRule}
        EventBusName:
          Fn::GetAtt:
            - BillsTableEventBus
            - Arn
        EventPattern:
          source:
            - "triggerBillsTable"
          detail:
            response:
              statusCode:
                - 200
              result:
                bill:
                  data:
                    status:
                      data:
                        - "PRODUCT_FIELDS_IDENTIFIED"
                      change:
                        - "new"
                        - "modified"
        Targets:
          - Arn:
              Fn::GetAtt:
                - SqsPromotionsIdentify
                - Arn
            Id: ${self:custom.sqsPromotionsIdentify}
    ApplyPromotionAmountRule:
      Type: AWS::Events::Rule
      Properties:
        Name: ${self:custom.applyPromotionAmountRule}
        EventBusName:
          Fn::GetAtt:
            - BillsTableEventBus
            - Arn
        EventPattern:
          source:
            - "triggerBillsTable"
          detail:
            response:
              statusCode:
                - 200
              result:
                bill:
                  data:
                    status:
                      data:
                        - "PROMOTIONS_FOUND"
                      change:
                        - "new"
                        - "modified"
        Targets:
          - Arn:
              Fn::GetAtt:
                - SqsApplyPromotionAmount
                - Arn
            Id: ${self:custom.sqsApplyPromotionAmount}
    SimpleHeaderOCRRule:
      Type: AWS::Events::Rule
      Properties:
        Name: ${self:custom.simpleHeaderOCRRule}
        EventBusName:
          Fn::GetAtt:
            - BillsTableEventBus
            - Arn
        EventPattern:
          source:
            - "triggerBillsTable"
          detail:
            response:
              result:
                bill:
                  data:
                    status:
                      data:
                        - SIMPLE_HEADER_OCR
                      change:
                        - new
                        - modified
        Targets:
          - Arn:
              Fn::GetAtt:
                - SqsSimpleHeaderOCR
                - Arn
            Id: ${self:custom.sqsSimpleHeaderOCR}
    IntelligentHeaderOCRRule:
      Type: AWS::Events::Rule
      Properties:
        Name: ${self:custom.intelligentHeaderOCRRule}
        EventBusName:
          Fn::GetAtt:
            - BillsTableEventBus
            - Arn
        EventPattern:
          source:
            - "triggerBillsTable"
          detail:
            response:
              result:
                bill:
                  data:
                    status:
                      data:
                        - INTELLIGENT_HEADER_OCR
                      change:
                        - new
                        - modified
        Targets:
          - Arn:
              Fn::GetAtt:
                - SqsIntelligentHeaderOCR
                - Arn
            Id: ${self:custom.sqsIntelligentHeaderOCR}
    SeekHeaderRelationshipsRule:
      Type: AWS::Events::Rule
      Properties:
        Name: ${self:custom.seekHeaderRelationshipsRule}
        EventBusName:
          Fn::GetAtt:
            - BillsTableEventBus
            - Arn
        EventPattern:
          source:
            - "triggerBillsTable"
          detail:
            response:
              result:
                bill:
                  data:
                    status:
                      data:
                        - SEEK_RELATIONSHIPS
                      change:
                        - new
                        - modified
        Targets:
          - Arn:
              Fn::GetAtt:
                - SqsSeekHeaderRelationships
                - Arn
            Id: ${self:custom.sqsSeekHeaderRelationships}
    CheckHeaderDictionaryRule:
      Type: AWS::Events::Rule
      Properties:
        Name: ${self:custom.checkHeaderDictionaryRule}
        EventBusName:
          Fn::GetAtt:
            - BillsTableEventBus
            - Arn
        EventPattern:
          source:
            - "triggerBillsTable"
          detail:
            response:
              result:
                bill:
                  data:
                    status:
                      data:
                        - CHECK_DICTIONARY
                      change:
                        - new
                        - modified
        Targets:
          - Arn:
              Fn::GetAtt:
                - SqsCheckHeaderDictionary
                - Arn
            Id: ${self:custom.sqsCheckHeaderDictionary}
    AddHeaderDictionaryRule:
      Type: AWS::Events::Rule
      Properties:
        Name: ${self:custom.addHeaderDictionaryRule}
        EventBusName:
          Fn::GetAtt:
            - BillsTableEventBus
            - Arn
        EventPattern:
          source:
            - "triggerBillsTable"
          detail:
            response:
              result:
                bill:
                  data:
                    status:
                      data:
                        - ADD_DICTIONARY
                      change:
                        - new
                        - modified
        Targets:
          - Arn: 
              Fn::GetAtt:
                - SqsAddHeaderDictionary
                - Arn
            Id: ${self:custom.sqsAddHeaderDictionary}
    NotifyRule:
      Type: AWS::Events::Rule
      Properties:
        Name: ${self:custom.notifyRule}
        EventBusName:
          Fn::GetAtt:
            - BillsTableEventBus
            - Arn
        EventPattern:
          source:
            - "triggerBillsTable"
          detail:
            response:
              result:
                bill:
                  data:
                    status:
                      data:
                        - BILL_DUPLICATED
                        - PROMOTION_AMOUNT_APPLIED
                        - BILL_SCAN_UNSUCCESSFUL
                        - BILL_LIMIT_DAY_REACHED
                        - BILL_LIMIT_WEEK_REACHED
                        - BILL_LIMIT_MONTH_REACHED
                        - BILL_LIMIT_24H_REACHED
                        - BILL_WITHOUT_IDENTIFIED_PRODUCTS
                      change:
                        - new
                        - modified
        Targets:
          - Arn:
              Fn::GetAtt:
                - SqsNotify
                - Arn
            Id: ${self:custom.sqsNotify}
    SqsBillsTextract:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.sqsBillsTextract}
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - DLQBillsTextract
              - Arn
          maxReceiveCount: 5
    DLQBillsTextract:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.dlqBillsTextract}
    SqsBillAnalysis:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.sqsBillAnalysis}
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - DLQBillAnalysis
              - Arn
          maxReceiveCount: 5
    DLQBillAnalysis:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.dlqBillAnalysis}
    SqsBillTextractPreProcessing:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.sqsBillTextractPreProcessing}
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - DLQBillTextractPreProcessing
              - Arn
          maxReceiveCount: 5
    DLQBillTextractPreProcessing:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.dlqBillTextractPreProcessing}
    SqsProductIdentify:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.sqsProductIdentify}
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - DLQProductIdentify
              - Arn
          maxReceiveCount: 5
    DLQProductIdentify:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.dlqProductIdentify}
    SqsPromotionsIdentify:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.sqsPromotionsIdentify}
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - DLQPromotionsIdentify
              - Arn
          maxReceiveCount: 5
    DLQPromotionsIdentify:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.dlqPromotionsIdentify}
    SqsApplyPromotionAmount:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.sqsApplyPromotionAmount}
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - DLQApplyPromotionAmount
              - Arn
          maxReceiveCount: 5
    DLQApplyPromotionAmount:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.dlqApplyPromotionAmount}
    SqsNotify:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.sqsNotify}
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - DLQSqsNotify
              - Arn
          maxReceiveCount: 5
    DLQSqsNotify:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.dlqSqsNotify}
    SqsSimpleHeaderOCR:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.sqsSimpleHeaderOCR}
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - DLQSimpleHeaderOCR
              - Arn
          maxReceiveCount: 5
    DLQSimpleHeaderOCR:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.dlqSimpleHeaderOCR}
    SqsIntelligentHeaderOCR:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.sqsIntelligentHeaderOCR}
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - DLQIntelligentHeaderOCR
              - Arn
          maxReceiveCount: 5
    DLQIntelligentHeaderOCR:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.dlqIntelligentHeaderOCR}
    SqsSeekHeaderRelationships:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.sqsSeekHeaderRelationships}
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - DLQSeekHeaderRelationships
              - Arn
          maxReceiveCount: 5
    DLQSeekHeaderRelationships:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.dlqSeekHeaderRelationships}
    SqsCheckHeaderDictionary:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.sqsCheckHeaderDictionary}
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - DLQCheckHeaderDictionary
              - Arn
          maxReceiveCount: 5
    DLQCheckHeaderDictionary:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.dlqCheckHeaderDictionary}
    SqsAddHeaderDictionary:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.sqsAddHeaderDictionary}
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - DLQAddHeaderDictionary
              - Arn
          maxReceiveCount: 5
    DLQAddHeaderDictionary:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.dlqAddHeaderDictionary}
    TriggerS3BillsBucketPermission:
      Type: AWS::Lambda::Permission
      Properties:
        FunctionName:
          Fn::Sub: "deyappa-back-sls-${sls:stage}-triggerS3BillsBucket"
        Action: lambda:InvokeFunction
        Principal: s3.amazonaws.com
        SourceArn:
          Fn::GetAtt:
            - S3BillsBucket
            - Arn
    LambdaExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service: lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: S3InvokeLambdaPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - s3:*
                  Resource: "*"
    TemporaryBucketS3:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.temporaryBucketS3}
    TriggerTemporaryBucketS3Permission:
      Type: AWS::Lambda::Permission
      Properties:
        FunctionName:
          Fn::Sub: "deyappa-back-sls-${sls:stage}-triggerTemporaryBucketS3"
        Action: lambda:InvokeFunction
        Principal: s3.amazonaws.com
        SourceArn:
          Fn::GetAtt:
            - TemporaryBucketS3
            - Arn
    BillsTableVertexEventBus:
      Type: AWS::Events::EventBus
      Properties:
        Name: ${self:custom.billsTableVertexEventBus}
    BillsVertexRule:
      Type: AWS::Events::Rule
      Properties:
        Name: ${self:custom.billsVertexRule}
        EventBusName:
          Fn::GetAtt:
            - BillsTableVertexEventBus
            - Arn
        EventPattern:
          source:
            - "triggerBillsTableVertex"
          detail:
            response:
              statusCode:
                - 200
              result:
                bill:
                  data:
                    status:
                      data:
                        - "CREATED"
                      change:
                        - "new"
                        - "modified"
        Targets:
          - Arn:
              Fn::GetAtt:
                - SqsBillsVertex
                - Arn
            Id: ${self:custom.sqsBillsVertex}
    CompressBillsRule:
      Type: AWS::Events::Rule
      Properties:
        Name: ${self:custom.compressBillsRule}
        EventBusName:
          Fn::GetAtt:
            - BillsTableVertexEventBus
            - Arn
        EventPattern:
          source:
            - "triggerBillsTableVertex"
          detail:
            response:
              statusCode:
                - 200
              result:
                bill:
                  data:
                    status:
                      data:
                        - "COMPRESS"
                      change:
                        - "new"
                        - "modified"
        Targets:
          - Arn:
              Fn::GetAtt:
                - SqsCompressImageVideoFile
                - Arn
            Id: ${self:custom.sqsCompressImageVideoFile}
    SqsCompressImageVideoFile:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.sqsCompressImageVideoFile}
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - DLQCompressImageVideoFile
              - Arn
          maxReceiveCount: 5
    DLQCompressImageVideoFile:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.dlqCompressImageVideoFile}
    SqsBillsVertex:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.sqsBillsVertex}
        VisibilityTimeout: 900
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - DLQBillsVertex
              - Arn
          maxReceiveCount: 5
    DLQBillsVertex:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.dlqBillsVertex}
    MediaConvertRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service: mediaconvert.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: MediaConvertPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - mediaconvert:CreateJob
                    - mediaconvert:GetJob
                  Resource: "*"
                - Effect: Allow
                  Action:
                    - iam:PassRole
                  Resource: arn:aws:iam::${aws:accountId}:role/deyappa-back-sls-${sls:stage}-MediaConvertRole-*
                - Effect: Allow
                  Action:
                    - s3:GetObject
                    - s3:PutObject
                    - s3:PutObjectAcl
                    - s3:PutBucketAcl
                    - s3:PutObjectCommand
                    - s3:GetObjectCommand
                  Resource:
                    - ${self:custom.S3BucketArn}
                    - ${self:custom.S3BucketArn1}
                    - ${self:custom.S3BucketBillsArn}
                    - ${self:custom.S3BucketBillsArn1}
                    - ${self:custom.temporaryBucketS3Arn}
                    - ${self:custom.temporaryBucketS3Arn1}